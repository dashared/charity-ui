{
  "swagger": "2.0",
  "host": "localhost:9000",
  "info": {
    "title": "Charity API",
    "contact": {}
  },
  "paths": {
    "/api/donation-request": {
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["DonationRequest"],
        "summary": "Creates donation request",
        "parameters": [
          {
            "description": "Donation request Input",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DonationRequest.Input"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/donation-request/": {
      "get": {
        "produces": ["application/json"],
        "tags": ["DonationRequest"],
        "summary": "Retrieves all donation requests",
        "parameters": [
          {
            "type": "integer",
            "default": 0,
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Page size",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10",
            "description": "Sort param",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "request author id",
            "name": "author",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "request assignee id",
            "name": "assignee",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "request status",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "request type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "id == searchString OR title LIKE searchString OR description LIKE searchString",
            "name": "searchString",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DonationRequest.Response"
            }
          }
        }
      }
    },
    "/api/donation-request/{id}": {
      "get": {
        "produces": ["application/json"],
        "tags": ["DonationRequest"],
        "summary": "Retrieves donation request based on given ID",
        "parameters": [
          {
            "type": "integer",
            "description": "Donation request ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DonationRequest.Body"
            }
          }
        }
      }
    },
    "/api/donation-request/{id}/history": {
      "get": {
        "produces": ["application/json"],
        "tags": ["DonationRequest"],
        "summary": "Gets history of status changes",
        "parameters": [
          {
            "type": "integer",
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page size",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sort",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "donation request id",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DonationRequest.HistoryResponse"
            }
          }
        }
      }
    },
    "/api/donation-request/{id}/status": {
      "delete": {
        "produces": ["application/json"],
        "tags": ["DonationRequest"],
        "summary": "RollBacks status of donation request",
        "parameters": [
          {
            "type": "integer",
            "description": "donation request id",
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DonationRequest.DonationRequest"
            }
          }
        }
      },
      "patch": {
        "produces": ["application/json"],
        "tags": ["DonationRequest"],
        "summary": "Updates status of donation request",
        "parameters": [
          {
            "type": "integer",
            "description": "donation request id",
            "name": "id",
            "in": "path"
          },
          {
            "description": "Status and message",
            "name": "input",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DonationRequest.UpdateInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DonationRequest.Response"
            }
          }
        }
      }
    },
    "/api/donations": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Donations"],
        "summary": "Retrieves a list of donations",
        "parameters": [
          {
            "type": "integer",
            "default": 0,
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Page size",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "default": "'created_at DESC'",
            "description": "Sort param",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "default": "10",
            "description": "Only for manager",
            "name": "user",
            "in": "query"
          },
          {
            "type": "string",
            "description": "User can access only his donations",
            "name": "application",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Blockchain.DonationsResponse"
            }
          }
        }
      }
    },
    "/api/donations/{id}": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Donations"],
        "summary": "Returns donation with a given id",
        "parameters": [
          {
            "type": "string",
            "description": "Donation ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Blockchain.Donation"
            }
          }
        }
      }
    },
    "/api/file/upload": {
      "post": {
        "consumes": ["multipart/form-data"],
        "tags": ["File"],
        "summary": "Uploads given file",
        "parameters": [
          {
            "type": "object",
            "description": "File",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/File.Response"
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "description": "Sets token on success",
        "tags": ["Login"],
        "summary": "Route for signing in",
        "parameters": [
          {
            "description": "User credentials",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth.Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/login/refresh": {
      "post": {
        "tags": ["Login"],
        "summary": "Route for refreshing",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/money/balance": {
      "get": {
        "produces": ["application/json"],
        "tags": ["Money"],
        "summary": "Gets user's balance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User.Balance"
            }
          }
        }
      }
    },
    "/api/money/deposit": {
      "post": {
        "produces": ["application/json"],
        "tags": ["Money"],
        "summary": "Deposit money to user with given ID",
        "parameters": [
          {
            "description": "Deposit",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockchain.Deposit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/money/deposit/application": {
      "post": {
        "produces": ["application/json"],
        "tags": ["Money"],
        "summary": "Donation to an application with a given ID",
        "parameters": [
          {
            "description": "DonateRequestInput",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockchain.DonateRequestInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "description": "Register with this route",
        "tags": ["Registration"],
        "summary": "Register",
        "parameters": [
          {
            "description": "Email registration input",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth.RegistrationInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/register/confirm": {
      "post": {
        "description": "Confirms email with code from email",
        "tags": ["Registration"],
        "summary": "Confirm email",
        "parameters": [
          {
            "description": "Email confirmation input",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth.EmailConfirmationInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/register/manager": {
      "post": {
        "description": "Register another user",
        "tags": ["Registration"],
        "summary": "Register another user from manager",
        "parameters": [
          {
            "description": "Registration input",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth.ManagerRegistrationInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "produces": ["application/json"],
        "tags": ["User"],
        "summary": "GetAllUsers",
        "parameters": [
          {
            "type": "integer",
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page size",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sort",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "description": "User role",
            "name": "role",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User.Response"
            }
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "produces": ["application/json"],
        "tags": ["User"],
        "summary": "Retrieves user based on given ID",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User.User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Auth.Credentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Auth.EmailConfirmationInput": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Auth.ManagerRegistrationInput": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "User",
            "Manager",
            "SuperManager",
            "ContentManager",
            "Operator",
            "Admin"
          ]
        },
        "user": {
          "$ref": "#/definitions/Auth.ManagerRegistrationUser"
        }
      }
    },
    "Auth.ManagerRegistrationUser": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Auth.RegistrationInput": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Blockchain.Donation": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "anonymous": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "donation_author": {
          "$ref": "#/definitions/User.User"
        },
        "donation_author_id": {
          "type": "string"
        },
        "donation_request": {
          "$ref": "#/definitions/DonationRequest.DonationRequest"
        },
        "donation_request_id": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Blockchain.DonationsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Blockchain.Donation"
          }
        },
        "page": {
          "$ref": "#/definitions/utils.PageData"
        }
      }
    },
    "DonationRequest.Body": {
      "type": "object",
      "properties": {
        "anonymous": {
          "type": "boolean"
        },
        "approved_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "assignee": {
          "$ref": "#/definitions/User.User"
        },
        "author": {
          "$ref": "#/definitions/User.User"
        },
        "available_statuses": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "New",
              "InProcessing",
              "Refused",
              "NeedsImprovement",
              "Archived",
              "SuperManagerConfirmation",
              "UserConfirmation",
              "Active",
              "Spam",
              "Deleted"
            ]
          }
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "donee": {
          "$ref": "#/definitions/User.SimpleUser"
        },
        "file_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "received_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "relationship": {
          "type": "string"
        },
        "request_type": {
          "type": "string"
        },
        "requested_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "InProcessing",
            "Refused",
            "NeedsImprovement",
            "Archived",
            "SuperManagerConfirmation",
            "UserConfirmation",
            "Active",
            "Spam",
            "Deleted"
          ]
        },
        "title": {
          "type": "string"
        },
        "until": {
          "type": "string"
        }
      }
    },
    "DonationRequest.DonationRequest": {
      "type": "object",
      "properties": {
        "anonymous": {
          "type": "boolean"
        },
        "approved_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "assignee": {
          "$ref": "#/definitions/User.User"
        },
        "author": {
          "$ref": "#/definitions/User.User"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "donee": {
          "$ref": "#/definitions/User.SimpleUser"
        },
        "id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "received_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "relationship": {
          "type": "string"
        },
        "request_type": {
          "type": "string"
        },
        "requested_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "InProcessing",
            "Refused",
            "NeedsImprovement",
            "Archived",
            "SuperManagerConfirmation",
            "UserConfirmation",
            "Active",
            "Spam",
            "Deleted"
          ]
        },
        "title": {
          "type": "string"
        },
        "until": {
          "type": "string"
        }
      }
    },
    "DonationRequest.HistoryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonationRequest.StatusHistory"
          }
        },
        "page": {
          "$ref": "#/definitions/utils.PageData"
        }
      }
    },
    "DonationRequest.Input": {
      "type": "object",
      "properties": {
        "assignee_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "donee": {
          "$ref": "#/definitions/User.SimpleUser"
        },
        "file_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        },
        "request_amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "request_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "until": {
          "type": "string"
        }
      }
    },
    "DonationRequest.Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonationRequest.Body"
          }
        },
        "page": {
          "$ref": "#/definitions/utils.PageData"
        }
      }
    },
    "DonationRequest.StatusHistory": {
      "type": "object",
      "properties": {
        "assignee": {
          "$ref": "#/definitions/User.User"
        },
        "author": {
          "$ref": "#/definitions/User.User"
        },
        "created_at": {
          "type": "string"
        },
        "current_status": {
          "type": "string"
        },
        "donation_request_id": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "previous_status": {
          "type": "string"
        }
      }
    },
    "DonationRequest.UpdateInput": {
      "type": "object",
      "properties": {
        "assignee_id": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "File.Response": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "User.Balance": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/utils.MoneyJson"
        }
      }
    },
    "User.Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User.User"
          }
        },
        "page": {
          "$ref": "#/definitions/utils.PageData"
        }
      }
    },
    "User.SimpleUser": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        }
      }
    },
    "User.User": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "User",
            "Manager",
            "SuperManager",
            "ContentManager",
            "Operator",
            "Admin"
          ]
        }
      }
    },
    "blockchain.Deposit": {
      "type": "object",
      "required": ["amount", "user_id"],
      "properties": {
        "amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "blockchain.DonateRequestInput": {
      "type": "object",
      "required": ["amount", "application", "password"],
      "properties": {
        "amount": {
          "$ref": "#/definitions/utils.MoneyJson"
        },
        "application": {
          "type": "integer"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "utils.MoneyJson": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "denominator": {
          "type": "integer"
        },
        "numerator": {
          "type": "integer"
        }
      }
    },
    "utils.PageData": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "totalElements": {
          "type": "integer"
        },
        "totalPages": {
          "type": "integer"
        }
      }
    }
  }
}
